
class Home extends React.PureComponent {

  async componentDidMount() {
    if (this.props.history.action === 'POP' && this.props.hydrated) {
      await Home.getInitialProps(this.props);
    }
  }

  render() {
    const count = this.props.articles.articlesCount;
    const { pageLength } = this.props.articles;
    const page = Number(this.props.match.params.page) || 1;
    return (
<home-page>
  <div className="home-page">
    <div className="banner">
      <div className="container">
        <h1 className="logo-font">conduit</h1>
        <p className="test">A place to share your knowledge.</p>
      </div>
    </div>
    <div className="container page">
      <div className="row">
        <div className="col-md-9">
          <div className="feed-toggle">
            <ul className="nav nav-pills outline-active">
              <NavItem if={user && user.data} to="/feed">Your Feed</NavItem>
              <NavItem to="/">Global Feed</NavItem>
              <NavItem if={this.props.articles.filter === 'tag'} to={`/tag/${this.props.articles.value}`}>
                #{this.props.articles.value}
              </NavItem>
            </ul>
          </div>
          <ArticlePreview each={article in this.props.articles.articles} {...article} user={this.props.user} key={article.slug} />)
          <Pagination {...{ count, pageLength, page }} />
        </div>
        <div className="col-md-3">
          <div className="sidebar">
            <p>Popular Tags</p>
            <div className="tag-list">
              <Link each={tags in this.props.articles.tags}
                to={`/tag/${tag}`}
                className="tag-pill tag-default"
                key={tag}
              >
                #{tag}
              </Link>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script>
    import { me } from '../../redux/services/user';
    import { feed, tags } from '../../redux/services/articles';
    import Articlepreview from '../components/articlePreview.riot';
    import Navigationitem from '../components/navigationItem.riot';
    import Pagination from '../components/pagination.riot';
    import Navigationlink from '../navigationLink.riot';
    export default {
      components: {
        Articlepreview,
        Navigationitem,
        Pagination,
        Navigationlink,
      },
      async getInitialProps({ req, dispatch, user, match }) {
        const page = Number(match.params.page) || 1;
        let filter;
        let value;
        if (req && !user) {
          promises.unshift(dispatch(me({ req })));
        }
        if (match.path.slice(0, 5) === '/feed') {
          if (req && !req.signedCookies.token) {
            return { redirectUrl: '/' };
          }
          filter = 'feed';
        } else if (match.params.tag) {
          filter = 'tag';
          value = match.params.tag;
        } else {
          filter = undefined;
        }
        promises.push(dispatch(feed({ req, filter, value, page })));
        promises.push(dispatch(tags({ req })));
        return Promise.all(promises);
      }
    }

  </script>
</home-page>
