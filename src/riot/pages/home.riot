<home-page>
  <div class="home-page">
    <div class="banner">
      <div class="container">
        <h1 class="logo-font">conduit</h1>
        <p class="test">A place to share your knowledge.</p>
      </div>
    </div>
    <div class="container page">
      <div class="row">
        <div class="col-md-9">
          <div class="feed-toggle">
            <ul class="nav nav-pills outline-active">
              <li is="navigationitem" to="/feed">Your Feed</li>
              <li is="navigationitem" to="/">Global Feed</li>
              <li if={state.currentTag} class={ 'nav-item'  + ('/' + props.action === props.to ? ' active' : '') }>
                <a
                  is='navigationlink'
                  class='nav-link'
                  href={ props.to }
                >
                  #<span>{state.currentTag}</span>
                </a>
              </li>
            </ul>
          </div>
          <div if={state.articles} each={article in state.articles} is="articlepreview" article={article} />
          <div is="pagination"  />
        </div>
        <div class="col-md-3">
          <div class="sidebar">
            <p>Popular Tags</p>
            <div class="tag-list">
              <a if={state.tags}
                each={tag in state.tags}
                is="navigationlink"
                href={`/tags/${tag}`}
                class="tag-pill tag-default"
                key={tag}
              >
                #{tag}
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script>
    //import { me } from '../../redux/services/user';
    //import { feed, tags } from '../../redux/services/articles';
    import Articlepreview from '../components/articlePreview.riot';
    import Navigationitem from '../components/navigationItem.riot';
    //import Pagination from '../components/pagination.riot';
    import Navigationlink from '../navigationLink.riot';
    export default {
      components: {
        Articlepreview,
        Navigationitem,
        //Pagination,
        Navigationlink,
      },
      connect(props, state) {
        state.articlesStore = props.store.articlesStore
        state.articles = props.store.articlesStore.articles
        state.tags = props.store.articlesStore.tags
        state.currentTag = props.req.params.tag
      }
      onBeforeMount(props, state) {
        this.connect(props, state);
      },
      onBeforeUpdate(props, state) {
        this.connect(props, state);
      },
      async init(route) {
        await Promise.all([
          route.store.articlesStore.getTags({}),
          route.store.articlesStore.feed({})
        ]);
        /*const page = Number(match.params.page) || 1;
        let filter;
        let value;
        if (req && !user) {
          promises.unshift(dispatch(me({ req })));
        }
        if (match.path.slice(0, 5) === '/feed') {
          if (req && !req.signedCookies.token) {
            return { redirectUrl: '/' };
          }
          filter = 'feed';
        } else if (match.params.tag) {
          filter = 'tag';
          value = match.params.tag;
        } else {
          filter = undefined;
        }
        promises.push(dispatch(feed({ req, filter, value, page })));
        promises.push(dispatch(tags({ req })));
        return Promise.all(promises);*/
      }
    }
  </script>
</home-page>
