<layout>
  <nav class="navbar navbar-light">
    <div class="container">
      <a is='navigationlink' class={"navbar-brand"} href={'/feed'}>
        conduit
      </a>
      <ul class={"nav navbar-nav pull-xs-right"}>
          <li is="navigationitem" to="/feed" key="feed">
            <i class={"ion-home"} />&nbsp;Home
          </li>
          <li is="navigationitem" to="/new-post" key="new-post">
            <i class={"ion-compose"} />&nbsp;New Post
          </li>
          <li is="navigationitem" to="/settings" key="settings">
            <i class={"ion-gear-a"} />&nbsp;Settings
          </li>
          <li is="navigationitemauthor" if={user && user.data} user={user} to={`/author/${user.data.username}`} key="author">
          </li>
          <li is="navigationitem" to="/sign-out" key="log-out">
            <i class={"ion-log-out"} />&nbsp;Sign out
          </li>
          <li is="navigationitem" to="/" key="home">
            <i class={"ion-home"} />&nbsp;Home
          </li>
          <li is="navigationitem" to="/sign-in" key="sign-in" {...props.data}>
            <i class={"ion-log-in"} />&nbsp;Sign in
          </li>
          <li is="navigationitem" to="/sign-up" key="sign-up" {...props.data}>
            <i class={"ion-person-add"} />&nbsp;Sign up
          </li>
      </ul>
    </div>
  </nav>
  <div class="home-page" is={props.page} store={props.store} {...props.data}>
  </div>
  <footer>
    <div class={"container"}>
      <mylink href="/" class={"logo-font"}>conduit</mylink>
      <span class={"attribution"}>
        An interactive learning project from <a href="https://thinkster.io">Thinkster</a>. Code &amp; design licensed under MIT.
      </span>
    </div>
  </footer>
  <script>
    import Navigationlink from '../navigationLink.riot';
    import Navigationitem from './navigationItem.riot';
    import Navigationitemauthor from './navigationItemAuthor.riot';
    import Login from '../pages/login.riot';
    export default {
      get user() {
        try {
          return this.userStore.store;
        } catch (ex) {
        }
      },
      get userStore() {
        try {
          return this.props.store.userStore;
        } catch (ex) {
        }
      },
      components: {
        Navigationitem,
        Navigationitemauthor,
        Navigationlink,
        Login
      },
    }
  </script>
</layout>
